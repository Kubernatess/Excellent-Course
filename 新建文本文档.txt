删除冗余的代码

如果有id属性,CSS选择器和JS选择器都可以通通改用id选择器

最好是id属性的选择器,才做CSS重用

JS字符串数组下标

统计功能

互动功能

预先准备好十门课程

iframe高度的问题,如果实在不能自适应的话,用固定高度也不错,因为自适应其实也会带来一些bug的问题

多测试测试系统

空串、Null的问题

在线批改功能

前端能做的事情尽量交给前端去做

<base>标签、<section>标签、语义标签、<code>标签、<h1>~<h6>、<main>标签

<figure>标签应用于文件管理系统

<form>表单有些属性还没用过

<iframe>也有些属性可能有用

<summary>标签好像不错

三目运算符

hidden属性

固定大小和百分比的问题

表格控制布局

图片裁切

代码重用

已加入课程、已完成课程

学习进度包括某门课程的访问量、每个页面是否访问过

发起讨论、你可以在每个子页面底下加一个评论部分

直接用body表示容器,减少标签的嵌套

删掉一些注释

侧栏记得修改

做那种简单分页

老师那边也可以看到学生的记录

scrolling属性已经不再支持

使用ajax有些不稳地,要不要改用form提交的形式

window.location.search还挺方便,还节省不少代码

element.hasFocus()、element.hasChildNodes()、element.isEqualNode()、element.isSameNode()

编辑器再优化一下

视频强制转换MP4格式

删除子页面的时候,级联删除访问量和记录表

btnSubmit.form直接就能返回它所在的表单节点

写关键的注释就够了

getParameterNames()

formaction 属性用于 type="submit" 和 type="image".  它的优势在于不再需要form标签,前提是form标签里面只有提交按钮一个元素

iframe改用递归算法,用参数来控制页面

hasAttribute()方法

click() 立即触发点击事件

querySelector("button")这种方式是可以直接获取子节点,可以替代getElementsByTagName()

<button><img></button>要不要改用<input type="image">,<input type="image">这种图片的按钮好处就是代码更少

注意document.getElementById("myTable").rows[0].cells[0])  这是单元格的获取方式

querySelector静态集合、getElement动态集合

当getElementsByName用不了的时候,就用querySelector("select[name=\"depart\"]")

选择器还是要以准确选取优先吧,以及名字短的优先

外层的css可以涵盖里面元素的css

删除多余的属性

后端维护

利用PS调整图片分辨率,显示到HTML页面,也能减少CSS代码,就是不用写height属性,如果你的系统界面完全定下来了可以这么做

浮动和inline-block都可以实现同一排排列,但是float是脱离流的,所以会出现一些不规则的现象,inline-block会比float更好些。比如一张图片和一个p标签为一组元素,如果要同一排排列,直接给最外层标签设置display属性即可,但是设置为Inline,它的子元素是达不到效果的,只有将最外层元素的dispplay属性设置为inline-block。Inline-block和float都可以对整块元素定位

${param.courseID}其实这个东西用JS也能搞定,也没必要占用HTML位置,看哪个代码更短吧。如果是session参数,那js就无能为力

:disabled  :enabled  :not(selector)  :read-only  :read-write伪类选择器

一个表单项如果有了name属性就不需要再加id属性

命名规范放到最后

如果是代码重用的CSS代码,选择器最好准确一点